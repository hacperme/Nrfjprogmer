#include <QApplication>
#include <QProcess>
#include <QDebug>
#include <windows.h>
#include <Qfile>


#include "API/api.h"
#include "UI/mainwindow.h"
#include "Tests/test.h"
#include "Crc/crc.h"

void test(){
    QFile file("param.hex");
    if (!file.open(QIODevice::WriteOnly | QIODevice::Text))
      return;

    QString data = ":20E10000414B00000000000000000000000000000000000000000000000000000000000073\n\
:20E120000000000000000000000000000000000000000000000000000000000000000000DF\n\
:20E140000000000000000000000000000000000000000000000000000000000000000000BF\n\
:20E1600000000000000000000000000000000000000000000000000000000000000000009F\n\
:20E1800000000000000000000000000000000000000000000000000000000000000000007F\n\
:20E1A00000000000000000000000000000000000000000000000000000000000000000005F\n\
:20E1C000000000AABBCCDD000000000100000000000000000000E64E0000000000000000FC\n\
:20E1E00000000000000000000000000000000000000000000000000000000000000000001F\n\
\n\
:20F10000424600000000000000000000000000000000000000000000000000000000000067\n\
:20F120000000000000000000000000000000000000000000000000000000000000000000CF\n\
:20F140000000000000000000000000000000000000000000000000000000000000000000AF\n\
:20F1600000000000000000000000000000000000000000000000000000000000000000008F\n\
:20F1800000000000000000000000000000000000000000000000000000000000000000006F\n\
:20F1A00000000000000000000000000000000000000000000000000000000000000000004F\n\
:20F1C000000000AABBCCDD000000000100000000000000000000E64E0000000000000000EC\n\
:20F1E00000000000000000000000000000000000000000000000000000000000000000000F\n\
";

    QString end = ":00000001FF";

    QTextStream out(&file);
    out << data+end;
    //校验计算方法
//    qDebug()<<QString::number((unsigned char)(0x01+~(0x20+0xe1+0xe0)),16);


}





int main(int argc, char *argv[])
{   

    QApplication a(argc, argv);

#ifdef RUN_TEST
    test_all();
#else

//    MainWindow w;
//    w.show();

    test();




//    unsigned char data[256]= {0x00};
//    data[0] = 0xaa,data[1]=0xbb,data[2]=0xcc,data[3]=0xdd,data[4]=0x01;
//    CrcTools crc;
//    qDebug()<<QString::number(crc.CRC16(data,256),16);

//    API *api = new API;
//    api->nrfjprog_erasepage("0x2e000","0x2f000");
//    Sleep(500);
//    api->nrfjprog_write_page(api->ak_param);

//    return a.exec();
#endif


    return 0;
}




